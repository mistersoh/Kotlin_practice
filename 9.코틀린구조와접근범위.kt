/**
 * 스코프 - 변수,함수,클래스 같은 멤버들을 서로 공유하여
 *          사용하는 범위를 지정해 둔 단위
 *       - 규칙들
 *          1) 스코프 외부에선 내부 멤버를 참조연산자로만 참조가능
 *          2) 동일 스코프 내에서는 멤버들을 공유가능
 *          3) 하위 스코프에서는 상위 스코프의 멤버를 재정의 가능
 * 
 * 접근제한자 - 스코프 외부에서 내부에 접근할 때 권한을 
 *             개발자가 제어할 수 있는 기능
 *              - public
 *                  - 패키지: 어떤 패키지에서도 접근 가능
 *                  - 클래스: 클래스 외부에서 늘 접근 가능
 *              - internal
 *                  - 패키지: 같은 모듈 내에서만 접근 가능
 *                  - 클래스: 클래스 스코프에서는 사용안됨
 *              - private
 *                  - 패키지: 같은 파일 내에서만 접근 가능
 *                  - 클래스: 클래스 내부에서만 접근 가능
 *              - protected
 *                  - 패키지: 패키지 스코프에서는 사용안됨
 *                  - 클래스: 자신과 상속받은 클래스에서 접근가능
 */
val a = "Scope 1"

class B(){
    val a = "Scope B"

    fun print(){
        println(a)
    }
}

fun main() {
    val a = "Scope main"

    println(a)
    B().print()
}